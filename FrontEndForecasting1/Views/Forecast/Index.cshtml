@{
    ViewData["Title"] = "Upload CSV File for Forecasting";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="text-center mb-5">
                <h1 class="display-4 mb-3">
                    <i class="fas fa-chart-line text-primary me-3"></i>
                    Demand Forecasting System
                </h1>
                <p class="lead text-muted">Upload your supply chain data to generate accurate demand forecasts using advanced ML models</p>
            </div>

            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-upload me-2"></i>
                        Upload CSV File
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-controller="Forecast" asp-action="Upload" method="post" enctype="multipart/form-data" id="uploadForm">
                        @Html.AntiForgeryToken()
                        <div class="mb-4">
                            <label for="fileInput" class="form-label fw-bold">Select CSV File:</label>
                            <div class="input-group">
                                <input type="file" id="fileInput" name="file" accept=".csv" class="form-control" required />
                            </div>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Supported format: CSV files only (Max size: 10MB)
                            </div>
                        </div>

                        <div class="mb-4" id="fileInfo" style="display: none;">
                            <div class="alert alert-success">
                                <div class="row">
                                    <div class="col-md-6">
                                        <strong><i class="fas fa-file me-1"></i>File:</strong> <span id="fileName"></span>
                                    </div>
                                    <div class="col-md-6">
                                        <strong><i class="fas fa-hdd me-1"></i>Size:</strong> <span id="fileSize"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" id="submitBtn" class="btn btn-primary btn-lg" disabled>
                                <span id="submitSpinner" class="spinner-border spinner-border-sm me-2" style="display: none;"></span>
                                <i class="fas fa-cloud-upload-alt me-2"></i>
                                Upload and Preview Data
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="mt-5">
                <h5 class="mb-3">
                    <i class="fas fa-list-check me-2"></i>
                    CSV File Requirements
                </h5>
                <div class="row">
                    <div class="col-md-6">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <i class="fas fa-check text-success me-2"></i>
                                Supply chain data with product information
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-check text-success me-2"></i>
                                Product ID and demand/sales columns
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <i class="fas fa-check text-success me-2"></i>
                                Date column in recognizable format
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-check text-success me-2"></i>
                                File size should not exceed 10MB
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="mt-5">
                <h5 class="mb-3">
                    <i class="fas fa-cogs me-2"></i>
                    How It Works
                </h5>
                <div class="row">
                    <div class="col-md-4 text-center mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="text-primary mb-3">
                                    <i class="fas fa-upload fa-3x"></i>
                                </div>
                                <h6>1. Upload</h6>
                                <p class="small text-muted">Upload your CSV file with supply chain data</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 text-center mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="text-warning mb-3">
                                    <i class="fas fa-table fa-3x"></i>
                                </div>
                                <h6>2. Preview</h6>
                                <p class="small text-muted">Review your data and verify it's correct</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 text-center mb-3">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="text-success mb-3">
                                    <i class="fas fa-chart-line fa-3x"></i>
                                </div>
                                <h6>3. Forecast</h6>
                                <p class="small text-muted">Generate predictions using ML models</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Bootstrap and FontAwesome -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" crossorigin="anonymous">

<script>
    console.log('Script loaded - checking elements...');
    
    // Check if elements exist
    const fileInput = document.getElementById('fileInput');
    const fileInfo = document.getElementById('fileInfo');
    const fileName = document.getElementById('fileName');
    const fileSize = document.getElementById('fileSize');
    const submitBtn = document.getElementById('submitBtn');
    
    console.log('fileInput:', fileInput);
    console.log('fileInfo:', fileInfo);
    console.log('submitBtn:', submitBtn);

    // Display selected file information
    if (fileInput) {
        fileInput.addEventListener('change', function() {
            console.log('File input change event triggered');
            const file = this.files[0];
            console.log('Selected file:', file);
            
            if (file) {
                // Validate file type
                if (!file.name.toLowerCase().endsWith('.csv')) {
                    alert('Please select a CSV file.');
                    this.value = '';
                    if (fileName) fileName.textContent = '';
                    if (fileSize) fileSize.textContent = '';
                    fileInfo.style.display = 'none';
                    submitBtn.disabled = true;
                    return;
                }

                // Validate file size (10MB limit)
                if (file.size > 10 * 1024 * 1024) {
                    alert('File size must be less than 10MB.');
                    this.value = '';
                    if (fileName) fileName.textContent = '';
                    if (fileSize) fileSize.textContent = '';
                    fileInfo.style.display = 'none';
                    submitBtn.disabled = true;
                    return;
                }

                if (fileName) fileName.textContent = file.name;
                if (fileSize) fileSize.textContent = formatFileSize(file.size);
                fileInfo.style.display = 'block';
                submitBtn.disabled = false;
            } else {
                if (fileName) fileName.textContent = '';
                if (fileSize) fileSize.textContent = '';
                fileInfo.style.display = 'none';
                submitBtn.disabled = true;
            }
        });
    } else {
        console.error('File input element not found!');
    }

    // Format file size
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // Form submission handling
    if (document.getElementById('uploadForm')) {
        document.getElementById('uploadForm').addEventListener('submit', function() {
            console.log('Form submitted');
            const submitBtn = document.getElementById('submitBtn');
            const spinner = document.getElementById('submitSpinner');

            submitBtn.disabled = true;
            spinner.style.display = 'inline-block';
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Uploading and Processing...';
        });
    }

    // Button to trigger file chooser
    const selectFileBtn = document.getElementById('selectFileBtn');
    const selectedFileDisplay = document.getElementById('selectedFileDisplay');
    console.log('selectFileBtn:', selectFileBtn);
    console.log('selectedFileDisplay:', selectedFileDisplay);
    if (selectFileBtn && fileInput) {
        console.log('Binding click handler to selectFileBtn');
        selectFileBtn.addEventListener('click', function(e) {
            console.log('selectFileBtn clicked', e);
            e.preventDefault();
            e.stopPropagation();
            
            try {
                console.log('About to call fileInput.click()');
                console.log('fileInput.style.display:', fileInput.style.display);
                console.log('fileInput.offsetParent:', fileInput.offsetParent);
                console.log('fileInput.visibility:', window.getComputedStyle(fileInput).visibility);
                console.log('fileInput.zIndex:', window.getComputedStyle(fileInput).zIndex);
                
                // Try to make input visible temporarily
                fileInput.style.display = 'block';
                fileInput.style.position = 'absolute';
                fileInput.style.left = '-9999px';
                fileInput.style.opacity = '0';
                
                console.log('Modified fileInput styles:', fileInput.style);
                
                // Force focus and click
                fileInput.focus();
                fileInput.click();
                
                console.log('fileInput.click() called successfully');
                
                // Restore hidden state
                setTimeout(() => {
                    fileInput.style.display = 'none';
                    fileInput.style.position = '';
                    fileInput.style.left = '';
                    fileInput.style.opacity = '';
                }, 100);
                
            } catch (err) {
                console.error('Error calling fileInput.click()', err);
                console.error('Error stack:', err.stack);
            }
        });
    } else {
        console.warn('selectFileBtn or fileInput not found; button handler not attached');
    }
</script>